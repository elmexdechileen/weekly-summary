name: Release Obsidian Plugin

on:
  push:
    tags:
      - '*'

env:
  PLUGIN_NAME: weekly-summarizer

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Prepare Release
        id: prepare
        run: |
          echo "Preparing release package..."

          # Create plugin directory
          mkdir -p ${{ env.PLUGIN_NAME }}

          # Copy main.js and manifest.json
          cp build/main.js ${{ env.PLUGIN_NAME }}/ || echo "main.js not found"
          cp manifest.json ${{ env.PLUGIN_NAME }}/ || echo "manifest.json not found"

          # Create the zip file
          cd ${{ env.PLUGIN_NAME }}
          zip -r ../${{ env.PLUGIN_NAME }}.zip .
          cd ..

          echo "Contents of plugin directory:"
          ls -la ${{ env.PLUGIN_NAME }}

          echo "Contents of root after zipping:"
          ls -la

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}.zip
          asset_content_type: application/zip

      - name: Upload main.js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/main.js
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload manifest.json
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
